$date
  Fri May 02 01:05:56 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 8 ! a[7:0] $end
$var reg 8 " b[7:0] $end
$var reg 1 # cout $end
$var reg 8 $ sum[7:0] $end
$scope module rca_adder $end
$var reg 8 % a[7:0] $end
$var reg 8 & b[7:0] $end
$var reg 8 ' sum[7:0] $end
$var reg 1 ( cout $end
$var reg 1 ) wire_1 $end
$var reg 1 * wire_2 $end
$var reg 1 + wire_3 $end
$var reg 1 , wire_4 $end
$var reg 1 - wire_5 $end
$var reg 1 . wire_6 $end
$var reg 1 / wire_7 $end
$scope module add0 $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 cin $end
$var reg 1 3 cout $end
$var reg 1 4 sum $end
$var reg 1 5 wire_1 $end
$var reg 1 6 wire_2 $end
$var reg 1 7 wire_3 $end
$upscope $end
$scope module add1 $end
$var reg 1 8 a $end
$var reg 1 9 b $end
$var reg 1 : cin $end
$var reg 1 ; cout $end
$var reg 1 < sum $end
$var reg 1 = wire_1 $end
$var reg 1 > wire_2 $end
$var reg 1 ? wire_3 $end
$upscope $end
$scope module add2 $end
$var reg 1 @ a $end
$var reg 1 A b $end
$var reg 1 B cin $end
$var reg 1 C cout $end
$var reg 1 D sum $end
$var reg 1 E wire_1 $end
$var reg 1 F wire_2 $end
$var reg 1 G wire_3 $end
$upscope $end
$scope module add3 $end
$var reg 1 H a $end
$var reg 1 I b $end
$var reg 1 J cin $end
$var reg 1 K cout $end
$var reg 1 L sum $end
$var reg 1 M wire_1 $end
$var reg 1 N wire_2 $end
$var reg 1 O wire_3 $end
$upscope $end
$scope module add4 $end
$var reg 1 P a $end
$var reg 1 Q b $end
$var reg 1 R cin $end
$var reg 1 S cout $end
$var reg 1 T sum $end
$var reg 1 U wire_1 $end
$var reg 1 V wire_2 $end
$var reg 1 W wire_3 $end
$upscope $end
$scope module add5 $end
$var reg 1 X a $end
$var reg 1 Y b $end
$var reg 1 Z cin $end
$var reg 1 [ cout $end
$var reg 1 \ sum $end
$var reg 1 ] wire_1 $end
$var reg 1 ^ wire_2 $end
$var reg 1 _ wire_3 $end
$upscope $end
$scope module add6 $end
$var reg 1 ` a $end
$var reg 1 a b $end
$var reg 1 b cin $end
$var reg 1 c cout $end
$var reg 1 d sum $end
$var reg 1 e wire_1 $end
$var reg 1 f wire_2 $end
$var reg 1 g wire_3 $end
$upscope $end
$scope module add7 $end
$var reg 1 h a $end
$var reg 1 i b $end
$var reg 1 j cin $end
$var reg 1 k cout $end
$var reg 1 l sum $end
$var reg 1 m wire_1 $end
$var reg 1 n wire_2 $end
$var reg 1 o wire_3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000 !
b00000001 "
0#
b00000001 $
b00000000 %
b00000001 &
b00000001 '
0(
0)
0*
0+
0,
0-
0.
0/
00
11
02
03
14
U5
U6
U7
08
09
0:
0;
0<
U=
U>
U?
0@
0A
0B
0C
0D
UE
UF
UG
0H
0I
0J
0K
0L
UM
UN
UO
0P
0Q
0R
0S
0T
UU
UV
UW
0X
0Y
0Z
0[
0\
U]
U^
U_
0`
0a
0b
0c
0d
Ue
Uf
Ug
0h
0i
0j
0k
0l
Um
Un
Uo
#10000000
b00100000 !
b00000010 "
b00100010 $
b00100000 %
b00000010 &
b00100010 '
01
04
19
1<
1X
1\
#20000000
b00100010 !
b10000001 "
b10100011 $
b00100010 %
b10000001 &
b10100011 '
11
14
18
09
1i
1l
#30000000
b01010000 !
b01000101 "
b10010101 $
b01010000 %
b01000101 &
b10010101 '
1/
08
0<
1A
1D
1P
1T
0X
0\
1`
1a
1c
0i
1j
1l
#40000000
