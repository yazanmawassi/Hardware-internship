$date
  Fri May 02 01:07:21 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 1 # cin $end
$var reg 1 $ cout $end
$var reg 4 % sum[3:0] $end
$scope module cla_adder $end
$var reg 4 & a[3:0] $end
$var reg 4 ' b[3:0] $end
$var reg 1 ( cin $end
$var reg 1 ) cout $end
$var reg 4 * sum[3:0] $end
$var reg 4 + g_s[3:0] $end
$var reg 4 , p_s[3:0] $end
$var reg 4 - c_s[3:0] $end
$var reg 1 . pout_s $end
$var reg 1 / gout_s $end
$scope module f0 $end
$var reg 1 0 a $end
$var reg 1 1 b $end
$var reg 1 2 cin $end
$var reg 1 3 g $end
$var reg 1 4 p $end
$var reg 1 5 sum $end
$upscope $end
$scope module f1 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 cin $end
$var reg 1 9 g $end
$var reg 1 : p $end
$var reg 1 ; sum $end
$upscope $end
$scope module f2 $end
$var reg 1 < a $end
$var reg 1 = b $end
$var reg 1 > cin $end
$var reg 1 ? g $end
$var reg 1 @ p $end
$var reg 1 A sum $end
$upscope $end
$scope module f3 $end
$var reg 1 B a $end
$var reg 1 C b $end
$var reg 1 D cin $end
$var reg 1 E g $end
$var reg 1 F p $end
$var reg 1 G sum $end
$upscope $end
$scope module c0 $end
$var reg 4 H gin[3:0] $end
$var reg 4 I pin[3:0] $end
$var reg 1 J cin $end
$var reg 4 K cout[3:0] $end
$var reg 1 L pout $end
$var reg 1 M gout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0001 "
0#
0$
b0001 %
b0000 &
b0001 '
0(
0)
b0001 *
b0000 +
b0001 ,
b0000 -
0.
0/
00
11
02
03
14
15
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
b0000 H
b0001 I
0J
b0000 K
0L
0M
#10000000
b0100 !
b0010 "
b0110 %
b0100 &
b0010 '
b0110 *
b0110 ,
01
04
05
17
1:
1;
1<
1@
1A
b0110 I
#20000000
b0110 !
b1001 "
b1111 %
b0110 &
b1001 '
b1111 *
b1111 ,
1.
11
14
15
16
07
1C
1F
1G
b1111 I
1L
#30000000
b0000 !
b0111 "
b0111 %
b0000 &
b0111 '
b0111 *
b0111 ,
0.
06
17
0<
1=
0C
0F
0G
b0111 I
0L
#40000000
