$date
  Wed May 07 21:22:22 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 3 ! i0_81[2:0] $end
$var reg 3 " i1_81[2:0] $end
$var reg 3 # i2_81[2:0] $end
$var reg 3 $ i3_81[2:0] $end
$var reg 3 % i4_81[2:0] $end
$var reg 3 & i5_81[2:0] $end
$var reg 3 ' i6_81[2:0] $end
$var reg 3 ( i7_81[2:0] $end
$var reg 3 ) sel_81[2:0] $end
$var reg 3 * y_81[2:0] $end
$scope module multiplex $end
$var reg 3 + i0_81[2:0] $end
$var reg 3 , i1_81[2:0] $end
$var reg 3 - i2_81[2:0] $end
$var reg 3 . i3_81[2:0] $end
$var reg 3 / i4_81[2:0] $end
$var reg 3 0 i5_81[2:0] $end
$var reg 3 1 i6_81[2:0] $end
$var reg 3 2 i7_81[2:0] $end
$var reg 3 3 sel_81[2:0] $end
$var reg 3 4 y_81[2:0] $end
$var reg 3 5 multi_output1[2:0] $end
$var reg 3 6 multi_output2[2:0] $end
$var reg 3 7 multi_output3[2:0] $end
$var reg 3 8 multi_output4[2:0] $end
$scope module multiplex1 $end
$var reg 3 9 i0[2:0] $end
$var reg 3 : i1[2:0] $end
$var reg 3 ; i2[2:0] $end
$var reg 3 < i3[2:0] $end
$var reg 2 = sel[1:0] $end
$var reg 3 > y[2:0] $end
$var reg 2 ? not_sel[1:0] $end
$var reg 3 @ and_output1[2:0] $end
$var reg 3 A and_output2[2:0] $end
$var reg 3 B and_output3[2:0] $end
$var reg 3 C and_output4[2:0] $end
$scope module and_gate_assignment(0) $end
$scope module and_output01 $end
$var reg 1 D input1 $end
$var reg 1 E input2 $end
$var reg 1 F input3 $end
$var reg 1 G and_output $end
$var reg 1 H andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 I input1 $end
$var reg 1 J input2 $end
$var reg 1 K input3 $end
$var reg 1 L and_output $end
$var reg 1 M andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 N input1 $end
$var reg 1 O input2 $end
$var reg 1 P input3 $end
$var reg 1 Q and_output $end
$var reg 1 R andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 S input1 $end
$var reg 1 T input2 $end
$var reg 1 U input3 $end
$var reg 1 V and_output $end
$var reg 1 W andgate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output01 $end
$var reg 1 X input1 $end
$var reg 1 Y input2 $end
$var reg 1 Z input3 $end
$var reg 1 [ and_output $end
$var reg 1 \ andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 ] input1 $end
$var reg 1 ^ input2 $end
$var reg 1 _ input3 $end
$var reg 1 ` and_output $end
$var reg 1 a andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 b input1 $end
$var reg 1 c input2 $end
$var reg 1 d input3 $end
$var reg 1 e and_output $end
$var reg 1 f andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 g input1 $end
$var reg 1 h input2 $end
$var reg 1 i input3 $end
$var reg 1 j and_output $end
$var reg 1 k andgate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output01 $end
$var reg 1 l input1 $end
$var reg 1 m input2 $end
$var reg 1 n input3 $end
$var reg 1 o and_output $end
$var reg 1 p andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 q input1 $end
$var reg 1 r input2 $end
$var reg 1 s input3 $end
$var reg 1 t and_output $end
$var reg 1 u andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 v input1 $end
$var reg 1 w input2 $end
$var reg 1 x input3 $end
$var reg 1 y and_output $end
$var reg 1 z andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 { input1 $end
$var reg 1 | input2 $end
$var reg 1 } input3 $end
$var reg 1 !" and_output $end
$var reg 1 "" andgate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output $end
$var reg 1 #" input1 $end
$var reg 1 $" input2 $end
$var reg 1 %" input3 $end
$var reg 1 &" input4 $end
$var reg 1 '" or_result $end
$var reg 1 (" orgate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output $end
$var reg 1 )" input1 $end
$var reg 1 *" input2 $end
$var reg 1 +" input3 $end
$var reg 1 ," input4 $end
$var reg 1 -" or_result $end
$var reg 1 ." orgate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output $end
$var reg 1 /" input1 $end
$var reg 1 0" input2 $end
$var reg 1 1" input3 $end
$var reg 1 2" input4 $end
$var reg 1 3" or_result $end
$var reg 1 4" orgate $end
$upscope $end
$upscope $end
$scope module not_sel1 $end
$var reg 1 5" input1 $end
$var reg 1 6" not_output $end
$var reg 1 7" notgate $end
$upscope $end
$scope module not_sel2 $end
$var reg 1 8" input1 $end
$var reg 1 9" not_output $end
$var reg 1 :" notgate $end
$upscope $end
$upscope $end
$scope module multiplex2 $end
$var reg 3 ;" i0[2:0] $end
$var reg 3 <" i1[2:0] $end
$var reg 3 =" i2[2:0] $end
$var reg 3 >" i3[2:0] $end
$var reg 2 ?" sel[1:0] $end
$var reg 3 @" y[2:0] $end
$var reg 2 A" not_sel[1:0] $end
$var reg 3 B" and_output1[2:0] $end
$var reg 3 C" and_output2[2:0] $end
$var reg 3 D" and_output3[2:0] $end
$var reg 3 E" and_output4[2:0] $end
$scope module and_gate_assignment(0) $end
$scope module and_output01 $end
$var reg 1 F" input1 $end
$var reg 1 G" input2 $end
$var reg 1 H" input3 $end
$var reg 1 I" and_output $end
$var reg 1 J" andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 K" input1 $end
$var reg 1 L" input2 $end
$var reg 1 M" input3 $end
$var reg 1 N" and_output $end
$var reg 1 O" andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 P" input1 $end
$var reg 1 Q" input2 $end
$var reg 1 R" input3 $end
$var reg 1 S" and_output $end
$var reg 1 T" andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 U" input1 $end
$var reg 1 V" input2 $end
$var reg 1 W" input3 $end
$var reg 1 X" and_output $end
$var reg 1 Y" andgate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(1) $end
$scope module and_output01 $end
$var reg 1 Z" input1 $end
$var reg 1 [" input2 $end
$var reg 1 \" input3 $end
$var reg 1 ]" and_output $end
$var reg 1 ^" andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 _" input1 $end
$var reg 1 `" input2 $end
$var reg 1 a" input3 $end
$var reg 1 b" and_output $end
$var reg 1 c" andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 d" input1 $end
$var reg 1 e" input2 $end
$var reg 1 f" input3 $end
$var reg 1 g" and_output $end
$var reg 1 h" andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 i" input1 $end
$var reg 1 j" input2 $end
$var reg 1 k" input3 $end
$var reg 1 l" and_output $end
$var reg 1 m" andgate $end
$upscope $end
$upscope $end
$scope module and_gate_assignment(2) $end
$scope module and_output01 $end
$var reg 1 n" input1 $end
$var reg 1 o" input2 $end
$var reg 1 p" input3 $end
$var reg 1 q" and_output $end
$var reg 1 r" andgate $end
$upscope $end
$scope module and_output02 $end
$var reg 1 s" input1 $end
$var reg 1 t" input2 $end
$var reg 1 u" input3 $end
$var reg 1 v" and_output $end
$var reg 1 w" andgate $end
$upscope $end
$scope module and_output03 $end
$var reg 1 x" input1 $end
$var reg 1 y" input2 $end
$var reg 1 z" input3 $end
$var reg 1 {" and_output $end
$var reg 1 |" andgate $end
$upscope $end
$scope module and_output04 $end
$var reg 1 }" input1 $end
$var reg 1 !# input2 $end
$var reg 1 "# input3 $end
$var reg 1 ## and_output $end
$var reg 1 $# andgate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(0) $end
$scope module or_output $end
$var reg 1 %# input1 $end
$var reg 1 &# input2 $end
$var reg 1 '# input3 $end
$var reg 1 (# input4 $end
$var reg 1 )# or_result $end
$var reg 1 *# orgate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(1) $end
$scope module or_output $end
$var reg 1 +# input1 $end
$var reg 1 ,# input2 $end
$var reg 1 -# input3 $end
$var reg 1 .# input4 $end
$var reg 1 /# or_result $end
$var reg 1 0# orgate $end
$upscope $end
$upscope $end
$scope module or_gate_assignment(2) $end
$scope module or_output $end
$var reg 1 1# input1 $end
$var reg 1 2# input2 $end
$var reg 1 3# input3 $end
$var reg 1 4# input4 $end
$var reg 1 5# or_result $end
$var reg 1 6# orgate $end
$upscope $end
$upscope $end
$scope module not_sel1 $end
$var reg 1 7# input1 $end
$var reg 1 8# not_output $end
$var reg 1 9# notgate $end
$upscope $end
$scope module not_sel2 $end
$var reg 1 :# input1 $end
$var reg 1 ;# not_output $end
$var reg 1 <# notgate $end
$upscope $end
$upscope $end
$scope module mul_assignment(0) $end
$upscope $end
$scope module mul_assignment(1) $end
$upscope $end
$scope module mul_assignment(2) $end
$upscope $end
$scope module mul_or_assignment(0) $end
$upscope $end
$scope module mul_or_assignment(1) $end
$upscope $end
$scope module mul_or_assignment(2) $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b000 !
b001 "
b010 #
b011 $
b100 %
b101 &
b110 '
b111 (
b000 )
b000 *
b000 +
b001 ,
b010 -
b011 .
b100 /
b101 0
b110 1
b111 2
b000 3
b000 4
b000 5
b100 6
b000 7
b000 8
b000 9
b001 :
b010 ;
b011 <
b00 =
b000 >
b11 ?
b000 @
b000 A
b000 B
b000 C
1D
1E
0F
0G
0H
0I
1J
1K
0L
0M
1N
0O
0P
0Q
0R
0S
0T
1U
0V
0W
1X
1Y
0Z
0[
0\
0]
1^
0_
0`
0a
1b
0c
1d
0e
0f
0g
0h
1i
0j
0k
1l
1m
0n
0o
0p
0q
1r
0s
0t
0u
1v
0w
0x
0y
0z
0{
0|
0}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
16"
17"
08"
19"
1:"
b100 ;"
b101 <"
b110 ="
b111 >"
b00 ?"
b100 @"
b11 A"
b100 B"
b000 C"
b000 D"
b000 E"
1F"
1G"
0H"
0I"
0J"
0K"
1L"
1M"
0N"
0O"
1P"
0Q"
0R"
0S"
0T"
0U"
0V"
1W"
0X"
0Y"
1Z"
1["
0\"
0]"
0^"
0_"
1`"
0a"
0b"
0c"
1d"
0e"
1f"
0g"
0h"
0i"
0j"
1k"
0l"
0m"
1n"
1o"
1p"
1q"
1r"
0s"
1t"
1u"
0v"
0w"
1x"
0y"
1z"
0{"
0|"
0}"
0!#
1"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
11#
02#
03#
04#
15#
16#
07#
18#
19#
0:#
1;#
1<#
#10000000
b001 )
b001 *
b001 3
b001 4
b001 5
b101 6
b001 7
b01 =
b001 >
b10 ?
b001 A
0D
1I
1L
1M
0N
1S
0X
1]
0b
1g
0l
1q
0v
1{
1$"
1'"
1("
15"
06"
07"
b01 ?"
b101 @"
b10 A"
b000 B"
b101 C"
0F"
1K"
1N"
1O"
0P"
1U"
0Z"
1_"
0d"
1i"
0n"
0q"
0r"
1s"
1v"
1w"
0x"
1}"
1&#
1)#
1*#
01#
12#
17#
08#
09#
#20000000
#30000000
