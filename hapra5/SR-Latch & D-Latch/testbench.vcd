$date
  Tue Nov 19 15:16:49 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module sr_latch_tb $end
$var reg 1 ! s $end
$var reg 1 " q $end
$var reg 1 # r $end
$var reg 1 $ not_q $end
$scope module sr1 $end
$var reg 1 % s $end
$var reg 1 & r $end
$var reg 1 ' q $end
$var reg 1 ( not_q $end
$var reg 1 ) nor_gate_1 $end
$var reg 1 * nor_gate_2 $end
$scope module or_output1 $end
$var reg 1 + input1 $end
$var reg 1 , input2 $end
$var reg 1 - nor_result $end
$var reg 1 . or_gate_signal $end
$var reg 1 / not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 0 input1 $end
$var reg 1 1 input2 $end
$var reg 1 2 or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 3 input1 $end
$var reg 1 4 not_result $end
$upscope $end
$upscope $end
$scope module or_output2 $end
$var reg 1 5 input1 $end
$var reg 1 6 input2 $end
$var reg 1 7 nor_result $end
$var reg 1 8 or_gate_signal $end
$var reg 1 9 not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 : input1 $end
$var reg 1 ; input2 $end
$var reg 1 < or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 = input1 $end
$var reg 1 > not_result $end
$upscope $end
$upscope $end
$upscope $end
$scope module sr2 $end
$var reg 1 ? s $end
$var reg 1 @ r $end
$var reg 1 A q $end
$var reg 1 B not_q $end
$var reg 1 C nor_gate_1 $end
$var reg 1 D nor_gate_2 $end
$scope module or_output1 $end
$var reg 1 E input1 $end
$var reg 1 F input2 $end
$var reg 1 G nor_result $end
$var reg 1 H or_gate_signal $end
$var reg 1 I not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 J input1 $end
$var reg 1 K input2 $end
$var reg 1 L or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 M input1 $end
$var reg 1 N not_result $end
$upscope $end
$upscope $end
$scope module or_output2 $end
$var reg 1 O input1 $end
$var reg 1 P input2 $end
$var reg 1 Q nor_result $end
$var reg 1 R or_gate_signal $end
$var reg 1 S not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 T input1 $end
$var reg 1 U input2 $end
$var reg 1 V or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 W input1 $end
$var reg 1 X not_result $end
$upscope $end
$upscope $end
$upscope $end
$scope module sr3 $end
$var reg 1 Y s $end
$var reg 1 Z r $end
$var reg 1 [ q $end
$var reg 1 \ not_q $end
$var reg 1 ] nor_gate_1 $end
$var reg 1 ^ nor_gate_2 $end
$scope module or_output1 $end
$var reg 1 _ input1 $end
$var reg 1 ` input2 $end
$var reg 1 a nor_result $end
$var reg 1 b or_gate_signal $end
$var reg 1 c not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 d input1 $end
$var reg 1 e input2 $end
$var reg 1 f or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 g input1 $end
$var reg 1 h not_result $end
$upscope $end
$upscope $end
$scope module or_output2 $end
$var reg 1 i input1 $end
$var reg 1 j input2 $end
$var reg 1 k nor_result $end
$var reg 1 l or_gate_signal $end
$var reg 1 m not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 n input1 $end
$var reg 1 o input2 $end
$var reg 1 p or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 q input1 $end
$var reg 1 r not_result $end
$upscope $end
$upscope $end
$upscope $end
$scope module sr4 $end
$var reg 1 s s $end
$var reg 1 t r $end
$var reg 1 u q $end
$var reg 1 v not_q $end
$var reg 1 w nor_gate_1 $end
$var reg 1 x nor_gate_2 $end
$scope module or_output1 $end
$var reg 1 y input1 $end
$var reg 1 z input2 $end
$var reg 1 { nor_result $end
$var reg 1 | or_gate_signal $end
$var reg 1 } not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 !" input1 $end
$var reg 1 "" input2 $end
$var reg 1 #" or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 $" input1 $end
$var reg 1 %" not_result $end
$upscope $end
$upscope $end
$scope module or_output2 $end
$var reg 1 &" input1 $end
$var reg 1 '" input2 $end
$var reg 1 (" nor_result $end
$var reg 1 )" or_gate_signal $end
$var reg 1 *" not_gate_signal $end
$scope module or_gate_1 $end
$var reg 1 +" input1 $end
$var reg 1 ," input2 $end
$var reg 1 -" or_result $end
$upscope $end
$scope module or_gate_2 $end
$var reg 1 ." input1 $end
$var reg 1 /" not_result $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
1"
0#
0$
1%
0&
1'
0(
0)
1*
1+
1,
0-
1.
U/
10
11
12
13
04
05
06
17
08
U9
0:
0;
0<
0=
1>
1?
0@
1A
0B
0C
1D
1E
1F
0G
1H
UI
1J
1K
1L
1M
0N
0O
0P
1Q
0R
US
0T
0U
0V
0W
1X
1Y
0Z
1[
0\
0]
1^
1_
1`
0a
1b
Uc
1d
1e
1f
1g
0h
0i
0j
1k
0l
Um
0n
0o
0p
0q
1r
1s
0t
1u
0v
0w
1x
1y
1z
0{
1|
U}
1!"
1""
1#"
1$"
0%"
0&"
0'"
1("
0)"
U*"
0+"
0,"
0-"
0."
1/"
#10000000
0!
0"
1#
1$
0%
1&
0'
1(
1)
0*
0+
0,
1-
0.
00
01
02
03
14
15
16
07
18
1:
1;
1<
1=
0>
0?
1@
0A
1B
1C
0D
0E
0F
1G
0H
0J
0K
0L
0M
1N
1O
1P
0Q
1R
1T
1U
1V
1W
0X
0Y
1Z
0[
1\
1]
0^
0_
0`
1a
0b
0d
0e
0f
0g
1h
1i
1j
0k
1l
1n
1o
1p
1q
0r
0s
1t
0u
1v
1w
0x
0y
0z
1{
0|
0!"
0""
0#"
0$"
1%"
1&"
1'"
0("
1)"
1+"
1,"
1-"
1."
0/"
#20000000
1!
0$
1%
0(
0)
1+
0-
1.
10
12
13
04
06
0;
1?
0B
0C
1E
0G
1H
1J
1L
1M
0N
0P
0U
1Y
0\
0]
1_
0a
1b
1d
1f
1g
0h
0j
0o
1s
0v
0w
1y
0{
1|
1!"
1#"
1$"
0%"
0'"
0,"
