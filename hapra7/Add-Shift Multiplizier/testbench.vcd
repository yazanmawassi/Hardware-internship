$date
  Fri Dec  6 21:20:24 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module add_shift_tb $end
$var reg 4 ! p_in_1[3:0] $end
$var reg 4 " p_in_2[3:0] $end
$var reg 8 # parallel_out[7:0] $end
$scope module add_shift_1 $end
$var reg 4 $ p_in_1[3:0] $end
$var reg 4 % p_in_2[3:0] $end
$var reg 8 & parallel_out[7:0] $end
$comment aktuellerz is not handled $end
$comment naechsterz is not handled $end
$var reg 8 ' initial_pipo[7:0] $end
$var reg 8 ( initial_sipo[7:0] $end
$var reg 8 ) initial_siso[7:0] $end
$var reg 8 * wire_pipo_adder[7:0] $end
$var reg 8 + wire_adder_pipo[7:0] $end
$var reg 8 , wire_sipo_l_adder[7:0] $end
$var reg 1 - control_add $end
$var reg 1 . control_save $end
$var reg 1 / control_shift $end
$var reg 1 0 control_clear $end
$var reg 1 1 siso_r_in $end
$var reg 1 2 siso_r_out $end
$var reg 1 3 sipo_l_in $end
$var reg 1 4 clock $end
$scope module multiplikand_register $end
$var reg 8 5 initial_in[7:0] $end
$var reg 1 6 serial_in $end
$var reg 1 7 clock $end
$var reg 1 8 clear $end
$var reg 8 9 parallel_out[7:0] $end
$var reg 8 : s_out[7:0] $end
$upscope $end
$scope module multiplikator_register $end
$var reg 8 ; initial_in[7:0] $end
$var reg 1 < serial_in $end
$var reg 1 = clock $end
$var reg 1 > clear $end
$var reg 1 ? serial_out $end
$var reg 8 @ s_out[7:0] $end
$upscope $end
$scope module produkt_register $end
$var reg 8 A initial_in[7:0] $end
$var reg 8 B parallel_in[7:0] $end
$var reg 1 C clock $end
$var reg 1 D clear $end
$var reg 8 E parallel_out[7:0] $end
$upscope $end
$scope module addierwerk $end
$var reg 8 F a[7:0] $end
$var reg 8 G b[7:0] $end
$var reg 1 H control $end
$var reg 8 I summe[7:0] $end
$var reg 8 J s_out[7:0] $end
$scope module ripple $end
$var reg 8 K a[7:0] $end
$var reg 8 L b[7:0] $end
$var reg 1 M cout $end
$var reg 8 N sum[7:0] $end
$var reg 1 O wire_1 $end
$var reg 1 P wire_2 $end
$var reg 1 Q wire_3 $end
$var reg 1 R wire_4 $end
$var reg 1 S wire_5 $end
$var reg 1 T wire_6 $end
$var reg 1 U wire_7 $end
$scope module add0 $end
$var reg 1 V a $end
$var reg 1 W b $end
$var reg 1 X cin $end
$var reg 1 Y cout $end
$var reg 1 Z s $end
$var reg 1 [ wire_1 $end
$var reg 1 \ wire_2 $end
$var reg 1 ] wire_3 $end
$scope module ha1 $end
$var reg 1 ^ a $end
$var reg 1 _ b $end
$var reg 1 ` o $end
$var reg 1 a c $end
$upscope $end
$scope module ha2 $end
$var reg 1 b a $end
$var reg 1 c b $end
$var reg 1 d o $end
$var reg 1 e c $end
$upscope $end
$upscope $end
$scope module add1 $end
$var reg 1 f a $end
$var reg 1 g b $end
$var reg 1 h cin $end
$var reg 1 i cout $end
$var reg 1 j s $end
$var reg 1 k wire_1 $end
$var reg 1 l wire_2 $end
$var reg 1 m wire_3 $end
$scope module ha1 $end
$var reg 1 n a $end
$var reg 1 o b $end
$var reg 1 p o $end
$var reg 1 q c $end
$upscope $end
$scope module ha2 $end
$var reg 1 r a $end
$var reg 1 s b $end
$var reg 1 t o $end
$var reg 1 u c $end
$upscope $end
$upscope $end
$scope module add2 $end
$var reg 1 v a $end
$var reg 1 w b $end
$var reg 1 x cin $end
$var reg 1 y cout $end
$var reg 1 z s $end
$var reg 1 { wire_1 $end
$var reg 1 | wire_2 $end
$var reg 1 } wire_3 $end
$scope module ha1 $end
$var reg 1 !" a $end
$var reg 1 "" b $end
$var reg 1 #" o $end
$var reg 1 $" c $end
$upscope $end
$scope module ha2 $end
$var reg 1 %" a $end
$var reg 1 &" b $end
$var reg 1 '" o $end
$var reg 1 (" c $end
$upscope $end
$upscope $end
$scope module add3 $end
$var reg 1 )" a $end
$var reg 1 *" b $end
$var reg 1 +" cin $end
$var reg 1 ," cout $end
$var reg 1 -" s $end
$var reg 1 ." wire_1 $end
$var reg 1 /" wire_2 $end
$var reg 1 0" wire_3 $end
$scope module ha1 $end
$var reg 1 1" a $end
$var reg 1 2" b $end
$var reg 1 3" o $end
$var reg 1 4" c $end
$upscope $end
$scope module ha2 $end
$var reg 1 5" a $end
$var reg 1 6" b $end
$var reg 1 7" o $end
$var reg 1 8" c $end
$upscope $end
$upscope $end
$scope module add4 $end
$var reg 1 9" a $end
$var reg 1 :" b $end
$var reg 1 ;" cin $end
$var reg 1 <" cout $end
$var reg 1 =" s $end
$var reg 1 >" wire_1 $end
$var reg 1 ?" wire_2 $end
$var reg 1 @" wire_3 $end
$scope module ha1 $end
$var reg 1 A" a $end
$var reg 1 B" b $end
$var reg 1 C" o $end
$var reg 1 D" c $end
$upscope $end
$scope module ha2 $end
$var reg 1 E" a $end
$var reg 1 F" b $end
$var reg 1 G" o $end
$var reg 1 H" c $end
$upscope $end
$upscope $end
$scope module add5 $end
$var reg 1 I" a $end
$var reg 1 J" b $end
$var reg 1 K" cin $end
$var reg 1 L" cout $end
$var reg 1 M" s $end
$var reg 1 N" wire_1 $end
$var reg 1 O" wire_2 $end
$var reg 1 P" wire_3 $end
$scope module ha1 $end
$var reg 1 Q" a $end
$var reg 1 R" b $end
$var reg 1 S" o $end
$var reg 1 T" c $end
$upscope $end
$scope module ha2 $end
$var reg 1 U" a $end
$var reg 1 V" b $end
$var reg 1 W" o $end
$var reg 1 X" c $end
$upscope $end
$upscope $end
$scope module add6 $end
$var reg 1 Y" a $end
$var reg 1 Z" b $end
$var reg 1 [" cin $end
$var reg 1 \" cout $end
$var reg 1 ]" s $end
$var reg 1 ^" wire_1 $end
$var reg 1 _" wire_2 $end
$var reg 1 `" wire_3 $end
$scope module ha1 $end
$var reg 1 a" a $end
$var reg 1 b" b $end
$var reg 1 c" o $end
$var reg 1 d" c $end
$upscope $end
$scope module ha2 $end
$var reg 1 e" a $end
$var reg 1 f" b $end
$var reg 1 g" o $end
$var reg 1 h" c $end
$upscope $end
$upscope $end
$scope module add7 $end
$var reg 1 i" a $end
$var reg 1 j" b $end
$var reg 1 k" cin $end
$var reg 1 l" cout $end
$var reg 1 m" s $end
$var reg 1 n" wire_1 $end
$var reg 1 o" wire_2 $end
$var reg 1 p" wire_3 $end
$scope module ha1 $end
$var reg 1 q" a $end
$var reg 1 r" b $end
$var reg 1 s" o $end
$var reg 1 t" c $end
$upscope $end
$scope module ha2 $end
$var reg 1 u" a $end
$var reg 1 v" b $end
$var reg 1 w" o $end
$var reg 1 x" c $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b1010 !
b1101 "
bUUUUUUUU #
b1010 $
b1101 %
bUUUUUUUU &
bUUUUUUUU '
bUUUUUUUU (
bUUUUUUUU )
bUUUUUUUU *
bUUUUUUUU +
bUUUUUUUU ,
0-
0.
0/
10
U1
U2
U3
U4
bUUUUUUUU 5
U6
07
18
bUUUUUUUU 9
bUUUUUUUU :
bUUUUUUUU ;
U<
0=
1>
U?
bUUUUUUUU @
bUUUUUUUU A
bUUUUUUUU B
0C
1D
bUUUUUUUU E
bUUUUUUUU F
bUUUUUUUU G
0H
bUUUUUUUU I
bUUUUUUUU J
bUUUUUUUU K
bUUUUUUUU L
UM
bUUUUUUUU N
UO
UP
UQ
UR
US
UT
UU
UV
UW
0X
UY
UZ
U[
U\
0]
U^
U_
U`
Ua
Ub
0c
Ud
0e
Uf
Ug
Uh
Ui
Uj
Uk
Ul
Um
Un
Uo
Up
Uq
Ur
Us
Ut
Uu
Uv
Uw
Ux
Uy
Uz
U{
U|
U}
U!"
U""
U#"
U$"
U%"
U&"
U'"
U("
U)"
U*"
U+"
U,"
U-"
U."
U/"
U0"
U1"
U2"
U3"
U4"
U5"
U6"
U7"
U8"
U9"
U:"
U;"
U<"
U="
U>"
U?"
U@"
UA"
UB"
UC"
UD"
UE"
UF"
UG"
UH"
UI"
UJ"
UK"
UL"
UM"
UN"
UO"
UP"
UQ"
UR"
US"
UT"
UU"
UV"
UW"
UX"
UY"
UZ"
U["
U\"
U]"
U^"
U_"
U`"
Ua"
Ub"
Uc"
Ud"
Ue"
Uf"
Ug"
Uh"
Ui"
Uj"
Uk"
Ul"
Um"
Un"
Uo"
Up"
Uq"
Ur"
Us"
Ut"
Uu"
Uv"
Uw"
Ux"
#10000000
b0111 "
b0111 %
#20000000
b1001 !
b1101 "
b1001 $
b1101 %
#30000000
b0111 "
b0111 %
#40000000
